/*
 * MetalSoft REST API
 *
 * MetalSoft REST API documentation
 *
 * API version: 2.0
 * Contact: support@metalsoft.io
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package sdk2

type Storage struct {
	// Id of the Storage
	StorageId float64 `json:"storageId" yaml:"storageId"`
	// Id of the owner
	UserId float64 `json:"userId,omitempty" yaml:"userId,omitempty"`
	// Id of the site
	SiteId float64 `json:"siteId" yaml:"siteId"`
	// Storage driver
	StorageDriver string `json:"storageDriver" yaml:"storageDriver"`
	// Storage technology
	StorageTechnology string `json:"storageTechnology" yaml:"storageTechnology"`
	// Storage type
	StorageType string `json:"storageType" yaml:"storageType"`
	// Name of the storage
	Name string `json:"name" yaml:"name"`
	// ISCSI host
	IscsiHost string `json:"iscsiHost,omitempty" yaml:"iscsiHost,omitempty"`
	// ISCSI port
	IscsiPort float64 `json:"iscsiPort,omitempty" yaml:"iscsiPort,omitempty"`
	// Management host
	ManagementHost string `json:"managementHost" yaml:"managementHost"`
	// Username
	ManagementUsername string `json:"managementUsername" yaml:"managementUsername"`
	// Password
	ManagementPassword string `json:"managementPassword" yaml:"managementPassword"`
	// Options for the storage
	Options *interface{} `json:"options,omitempty" yaml:"options,omitempty"`
	// Specifies if the storage is in maintenance
	InMaintenance float64 `json:"inMaintenance" yaml:"inMaintenance"`
	// Target IQN
	TargetIQN string `json:"targetIQN,omitempty" yaml:"targetIQN,omitempty"`
	// Specifies if the storage is experimental
	IsExperimental float64 `json:"isExperimental,omitempty" yaml:"isExperimental,omitempty"`
	// Specifies if the drive priority
	DrivePriority float64 `json:"drivePriority" yaml:"drivePriority"`
	// Specifies if the drive priority
	SharedDrivePriority float64 `json:"sharedDrivePriority" yaml:"sharedDrivePriority"`
	// Alternate SAN IPs
	AlternateSanIPs []string `json:"alternateSanIPs,omitempty" yaml:"alternateSanIPs,omitempty"`
	// Tags
	Tags []string `json:"tags,omitempty" yaml:"tags,omitempty"`
	// Port group allocation order
	PortGroupAllocationOrder *interface{} `json:"portGroupAllocationOrder,omitempty" yaml:"portGroupAllocationOrder,omitempty"`
	// Port group physical ports
	PortGroupPhysicalPorts *interface{} `json:"portGroupPhysicalPorts,omitempty" yaml:"portGroupPhysicalPorts,omitempty"`
	// Default IO limit policy
	DefaultIoLimitPolicy string `json:"defaultIoLimitPolicy,omitempty" yaml:"defaultIoLimitPolicy,omitempty"`
	// Subnet type
	SubnetType string `json:"subnetType" yaml:"subnetType"`
	// Array id
	ArrayId string `json:"arrayId,omitempty" yaml:"arrayId,omitempty"`
	// Director id
	DirectorId string `json:"directorId,omitempty" yaml:"directorId,omitempty"`
}
